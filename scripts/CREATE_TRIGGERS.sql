-- Trigger for adding new blank row in CE_STOCK table after creating a new product
CREATE OR REPLACE TRIGGER CE_STOCK_NEW_PRODUCT
AFTER INSERT ON CE_PRODUCTS
FOR EACH ROW
BEGIN
    INSERT INTO CE_STOCK(VENDOR_CODE, QUANTITY) VALUES(:NEW.VENDOR_CODE, 0);
END;
/

-- Trigger for adding items to stock
CREATE OR REPLACE TRIGGER CE_STOCK_ADD_PRODUCT
AFTER INSERT ON CE_INCOMING
FOR EACH ROW
BEGIN
    UPDATE CE_STOCK
    SET QUANTITY = QUANTITY + :NEW.QUANTITY
    WHERE VENDOR_CODE = :NEW.VENDOR_CODE;
END;
/

-- Trigger for removing items from stock
CREATE OR REPLACE TRIGGER CE_STOCK_REMOVE_PRODUCT
AFTER INSERT ON CE_OUTGOING
FOR EACH ROW
BEGIN
    UPDATE CE_STOCK
    SET QUANTITY = QUANTITY - :NEW.QUANTITY
    WHERE VENDOR_CODE = :NEW.VENDOR_CODE;
END;
/

-- Trigger not allowing to sell more items than are in stock
CREATE OR REPLACE TRIGGER CE_CHECK_STOCK_PRODUCT
BEFORE INSERT ON CE_OUTGOING
FOR EACH ROW
DECLARE
    in_stock NUMBER;
    not_enough_items_in_stock EXCEPTION;
BEGIN
    SELECT ST.QUANTITY INTO in_stock FROM CE_STOCK ST
    WHERE ST.VENDOR_CODE = :NEW.VENDOR_CODE;
    IF (:NEW.QUANTITY > in_stock) THEN
        RAISE not_enough_items_in_stock;
    END IF;
    EXCEPTION
        WHEN not_enough_items_in_stock THEN
            RAISE_APPLICATION_ERROR(-20001, 'Not enough items in stock');
END;
/
